//
//  CompanyListDoublesAndSpies.swift
//  MediquoApp
//
//  Created by Guillem Espejo on 07/11/2020.
//
//  This file was generated by the Guillem Espejo Clean Swift Xcode Templates
//

@testable import MediquoApp
import XCTest

// ------------------------------------------------------------
// TEST SPIES
// ------------------------------------------------------------
// MARK: - Test Spies
// Presenter
class CompanyListPresentationLogicSpy: CompanyListPresentationLogic{
    var presentBaseNetworkWasCalled = false
    var presentBaseNetworkErrorWasCalled = false
    
    var expectation : XCTestExpectation?
    
    init(expectation: XCTestExpectation?){
        self.expectation = expectation
    }
    
    func presentBaseNetworkData(response: CompanyList.LoadBaseNetworkData.Response) {
        presentBaseNetworkWasCalled = true
        self.expectation?.fulfill()
    }
    
    func presentBaseNetworkDataError(_ error: Error) {
        presentBaseNetworkErrorWasCalled = true
        self.expectation?.fulfill()
    }
    
}

// ViewController
class CompanyListDisplayLogicSpy: CompanyListDisplayLogic{
    var displayBaseNetworkWasCalled = false
    var displayBaseNetworkErrorWasCalled = false
    
    var displayableList = [CompanyList.DisplayableCompany]()
    
    func displayBaseNewtorkData(viewModel: CompanyList.LoadBaseNetworkData.ViewModel) {
        displayBaseNetworkWasCalled = true
        displayableList = viewModel.companyList
    }
    
    func displayBaseNetworkDataError(_ error: Error) {
        displayBaseNetworkErrorWasCalled = true
    }
    

}

// Interactor
class CompanyListBusinessLogicSpy: CompanyListBusinessLogic{
    var loadBaseNetworkWasCalled = false
    func loadBaseNetworkData(request: CompanyList.LoadBaseNetworkData.Request) {
        loadBaseNetworkWasCalled = true
    }

}

// Router
class CompanyListRouterSpy: NSObject, CompanyListRoutingLogic,CompanyListDataPassing{
    var routeToShowCompanyWasCalled = false
    var routeToErrorAlertWasCalled = false
    
    var expectation : XCTestExpectation?
    
    init(expectation: XCTestExpectation?){
        self.expectation = expectation
    }
    
    func routeToShowCompany(segue: UIStoryboardSegue?) {
        routeToShowCompanyWasCalled = true
    }
    
    func routeToErrorAlert(_ error: Error) {
        routeToErrorAlertWasCalled = true
        self.expectation?.fulfill()
    }
    
	var dataStore: CompanyListDataStore?
}

// Worker
class CompanyListWorkerSpy : CompanyListWorker{
    var shouldFailOperations = false
    
    override func loadBaseNetworkData(completion: @escaping (Result<[Network],Error>) -> Void){        
        if shouldFailOperations {
            completion( .failure(MediquoError.networkError) )

        }else{
            completion( .success( [] ) )
        }
    
    }

}
