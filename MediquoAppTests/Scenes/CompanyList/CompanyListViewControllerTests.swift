//
//  CompanyListViewControllerTests.swift
//  MediquoApp
//
//  Created by Guillem Espejo on 07/11/2020.
//
//  This file was generated by the Guillem Espejo Clean Swift Xcode Templates
//

@testable import MediquoApp
import XCTest

class CompanyListViewControllerTests: XCTestCase{
	
    // MARK: Subject under test
    var sut: CompanyListViewController!
    var window: UIWindow!

    // MARK: Test lifecycle
    override func setUp(){
        super.setUp()
        window = UIWindow()
        setupCompanyListViewController()
    }
  
    override func tearDown(){
        window = nil
        super.tearDown()
    }
  
	// ------------------------------------------------------------
	// SETUP
	// ------------------------------------------------------------
	// MARK: - Setup
    func setupCompanyListViewController(){
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: Constants.ViewId.StoryboardName, bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: Constants.ViewId.CompanyListViewControllerName) as? CompanyListViewController
    }
  
    func loadView(){
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
  
	// ------------------------------------------------------------
	// TESTS
	// ------------------------------------------------------------
	// MARK: - Tests
    func testShouldLoadDataWhenViewIsLoaded(){
        // Given
        let spy = CompanyListBusinessLogicSpy()
        sut.interactor = spy

        // When
        loadView()

        // Then
        XCTAssertTrue(spy.loadBaseNetworkWasCalled, "viewDidLoad() should ask the interactor to do load data")
    }
  
    func testDisplayBaseNetworkData(){
        // Given
        let displayable = CompanyList.DisplayableCompany(companyName: "COMPANY", networkName: "NETWORKNAME", originalId: "ORIGINAL")
        let viewModel = CompanyList.LoadBaseNetworkData.ViewModel(companyList: [displayable])
        let indexPath = IndexPath(row: 0, section: 0)
        
        // When
        loadView()
        sut.displayBaseNewtorkData(viewModel: viewModel)

        let cell = sut.tableViewCompanies.cellForRow(at: indexPath)
        
        // Then
        XCTAssertEqual(sut.displayableCompanies.count, 1, "DisplayableCompanies should have 1 value")        
        XCTAssertEqual(cell!.textLabel!.text, "COMPANY", " cell text should be 'COMPANY'")
        XCTAssertEqual(cell!.detailTextLabel!.text, "NETWORKNAME", " cell subtitle should be 'NETWORKNAME'")
        
    }
    
    func testDisplayBaseNetworkError(){
        // Given
        let expectation = self.expectation(description: "ShowErrorExpectation")
        let routerSpy = CompanyListRouterSpy(expectation: expectation)
        let spy = CompanyListBusinessLogicSpy()
        sut.interactor = spy
        sut.router = routerSpy

        // When
        loadView()
        sut.displayBaseNetworkDataError(MediquoError.wrongEndpoint)

        // Then
        waitForExpectations(timeout: 2.0)
        XCTAssertTrue(routerSpy.routeToErrorAlertWasCalled, "displayBaseNetworkDataError(viewModel:) should have tried to route to an error view!")
    }
    
}
