//
//  CompanyListPresenter.swift
//  MediquoApp
//
//  Created by Guillem Espejo on 05/11/2020.
//
//  This file was generated by the Guillem Espejo Clean Swift Xcode Templates
//

import UIKit

protocol CompanyListPresentationLogic{
    func presentBaseNetworkData(response: CompanyList.LoadBaseNetworkData.Response)
    func presentBaseNetworkDataError(_ error: Error)
}

class CompanyListPresenter: CompanyListPresentationLogic{
    weak var viewController: CompanyListDisplayLogic?
    
    // ------------------------------------------------------------
    // INIT-DEINIT
    // ------------------------------------------------------------
    // MARK: - Init-Deinit
    init(viewController: CompanyListDisplayLogic?) {
        self.viewController = viewController
    }

    // ------------------------------------------------------------
    // PRESENTATION LOGIC
    // ------------------------------------------------------------
    // MARK: - Presentation Logic
    func presentBaseNetworkData(response: CompanyList.LoadBaseNetworkData.Response){
        
        var displayableCompanies = Set<CompanyList.DisplayableCompany>()
        
        for network in response.networks {
            let companies = network.company.getValues()
            for company in companies {
                let networkName = String(format: Resources.Localizable.NetworkNameFormat , network.name, network.location.city )
                var finalCompanyName : String
                if company != "" {
                    finalCompanyName = company
                }else{
                    finalCompanyName = Resources.Localizable.CompanyNullName
                }
                
                let displayableCompany = CompanyList.DisplayableCompany(companyName: finalCompanyName,
                                                                        networkName: networkName,
                                                                        originalId: network.id )
                displayableCompanies.insert(displayableCompany)
            }
            
        }
        
        // Sort initially by name
        let sortedSet = displayableCompanies.sorted { (a, b) -> Bool in
            return a.companyName < b.companyName
        }
        
        let viewModel = CompanyList.LoadBaseNetworkData.ViewModel(companyList:Array(sortedSet))
        viewController?.displayBaseNewtorkData(viewModel: viewModel)
    }
    
    func presentBaseNetworkDataError(_ error: Error){
        viewController?.displayBaseNetworkDataError(error)
    }
}
