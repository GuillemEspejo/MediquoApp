//
//  CompanyListInteractor.swift
//  MediquoApp
//
//  Created by Guillem Espejo on 05/11/2020.
//
//  This file was generated by the Guillem Espejo Clean Swift Xcode Templates
//

import Foundation

protocol CompanyListBusinessLogic{
    func loadBaseNetworkData(request: CompanyList.LoadBaseNetworkData.Request)
}

protocol CompanyListDataStore{
    var networkList: [Network] { get set }
}

class CompanyListInteractor: CompanyListBusinessLogic, CompanyListDataStore{
    var presenter: CompanyListPresentationLogic?
    var worker: CompanyListWorker?
    var networkList: [Network] = []
    
    // ------------------------------------------------------------
    // INIT-DEINIT
    // ------------------------------------------------------------
    // MARK: - Init-Deinit
    init( presenter: CompanyListPresentationLogic?, worker: CompanyListWorker? = CompanyListWorker() ){
        self.presenter = presenter
        self.worker = worker
    }

    // ------------------------------------------------------------
    // BUSINESS LOGIC
    // ------------------------------------------------------------
    // MARK: - Business Logic
    func loadBaseNetworkData(request: CompanyList.LoadBaseNetworkData.Request){
        self.worker?.loadBaseNetworkData(completion: { [weak self] (result) in
            switch result{
                case .success(let networks):
                    self?.networkList = networks
                    let response = CompanyList.LoadBaseNetworkData.Response(networks:networks)
                    self?.presenter?.presentBaseNetworkData(response: response)
            
                case .failure(let error):
                    self?.presenter?.presentBaseNetworkDataError(error)
            }
        })
        
    }
}
